<?php
/**
 * @file
 * Provides installation details for Harmony core.
 */

/**
 * Implements hook_schema().
 */
function harmony_core_schema() {
  $schema = array();

  $schema['harmony_thread'] = array(
    'description' => 'The base table for threads.',
    'fields' => array(
      'thread_id' => array(
        'description' => 'The primary identifier for the thread.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The title of the thread.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether the thread is published (visible to non-administrators).',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the thread was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the thread was most recently updated.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'pinned' => array(
        'description' => 'Boolean indicating whether the thread should be displayed at the top of lists in which it appears.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'locked' => array(
        'description' => 'Boolean indicating whether the thread is locked from changes.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'hidden' => array(
        'description' => 'Boolean indicating whether the thread is hidden in listings.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'favourites' => array(
        'description' => 'Number of times that the thread has been favourited.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'likes' => array(
        'description' => 'Number of times that posts within the thread have been liked.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'views' => array(
        'description' => 'Number of times the thread has been viewed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'status' => array('status'),
      'created' => array('created'),
      'updated' => array('updated'),
      'pinned' => array('pinned'),
      'locked' => array('locked'),
      'likes' => array('likes'),
      'views' => array('views'),
      'uid' => array('uid'),
    ),
    'foreign keys' => array(
      'thread_author' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
    'primary key' => array('thread_id'),
  );

  $schema['harmony_thread_read_history'] = array(
    'description' => 'A record of which {users} have read which {harmony_thread}s.',
    'fields' => array(
      'uid' => array(
        'description' => 'The {users}.uid that read the {harmony_thread} thread_id.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'thread_id' => array(
        'description' => 'The {harmony_thread}.thread_id that was read.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'timestamp' => array(
        'description' => 'The Unix timestamp at which the read occurred.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'thread_id' => array('thread_id'),
    ),
    'foreign keys' => array(
      'user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
    'primary key' => array('uid', 'thread_id'),
  );

  $schema['harmony_post'] = array(
    'description' => 'The base table for posts.',
    'fields' => array(
      'post_id' => array(
        'description' => 'The primary identifier for the post.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      // Defaults to NULL in order to avoid a brief period of potential
      // deadlocks on the index.
      'vid' => array(
        'description' => 'The current {post_revision}.vid version identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'title' => array(
        'description' => 'The title of the post.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether the post is published (visible to non-administrators).',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the post was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the post was most recently updated.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'locked' => array(
        'description' => 'Boolean indicating whether the post is locked from changes.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'replies' => array(
        'description' => 'Number of times that the post has been replied to.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'first_post' => array(
        'description' => 'Boolean indicating whether the post is the first within the thread.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'status' => array('status'),
      'created' => array('created'),
      'updated' => array('updated'),
      'locked' => array('locked'),
      'replies' => array('replies'),
      'uid' => array('uid'),
    ),
    'unique keys' => array(
      'vid' => array('vid'),
    ),
    'foreign keys' => array(
      'harmony_post_revision' => array(
        'table' => 'harmony_post_revision',
        'columns' => array('vid' => 'vid'),
      ),
      'post_author' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
    'primary key' => array('post_id'),
  );

  $schema['harmony_post_revision'] = array(
    'description' => 'Stores information about each saved version of a {harmony_post}.',
    'fields' => array(
      'post_id' => array(
        'description' => 'The primary identifier for the post.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => 'The primary identifier for this version.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The title of the post.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'log' => array(
        'description' => 'The log entry explaining the changes in this version.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'uid' => array(
        'description' => 'ID of Drupal user creator.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether the post is published (visible to non-administrators).',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'timestamp' => array(
        'description' => 'The Unix timestamp when the revision was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'locked' => array(
        'description' => 'Boolean indicating whether the post is locked from changes.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'replies' => array(
        'description' => 'Number of times that the post has been replied to.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'first_post' => array(
        'description' => 'Boolean indicating whether the post is the first within the thread.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'post_id' => array('post_id'),
      'status' => array('status'),
      'timestamp' => array('timestamp'),
      'locked' => array('locked'),
      'replies' => array('replies'),
      'uid' => array('uid'),
    ),
    'foreign keys' => array(
      'harmony_versioned_post' => array(
        'table' => 'harmony_post',
        'columns' => array('post_id' => 'post_id'),
      ),
      'version_author' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
    'primary key' => array('vid'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function harmony_core_install() {
  if (variable_get('jquery_update_jquery_version', '1.5') == '1.5') {
    variable_set('jquery_update_jquery_version', '1.7');
  }
}

/**
 * Implements hook_uninstall().
 */
function harmony_core_uninstall() {
  variable_del('harmony_core_thread_new_limit');
  variable_del('harmony_core_post_revisions_view');
  variable_del('harmony_core_post_show_replies');
  variable_del('harmony_core_post_replies_view');
  variable_del('harmony_core_meta_summary_max_length');
  variable_del('harmony_core_mass_update_batch_threshold');
}
